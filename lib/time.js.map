{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/time.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n#===========================================================================================================\nclass Isa\n\n  #=========================================================================================================\n  # Bottom Types\n  #---------------------------------------------------------------------------------------------------------\n  null:          ( x ) -> x is null\n  undefined:     ( x ) -> x is undefined\n  bottom:        ( x ) -> ( x is undefined ) or ( x is null )\n\n\n  #=========================================================================================================\n  # Existential Types\n  #---------------------------------------------------------------------------------------------------------\n  anything:      ( x ) -> true\n  something:     ( x ) -> x?\n  nothing:       ( x ) -> not x?\n\n\n  #=========================================================================================================\n  # Textual Types\n  #---------------------------------------------------------------------------------------------------------\n  text:          ( x ) -> ( typeof x ) is 'string'\n  codepoint:     ( x ) -> ( ( typeof x ) is 'string' ) and /^.$/u.test x\n  codepointid:   ( x ) -> @isa.integer x and ( 0x00000 <= x <= 0x1ffff )\n  regex:         ( x ) -> ( Object::toString.call x ) is '[object RegExp]'\n  #---------------------------------------------------------------------------------------------------------\n  ### thx to https://github.com/mathiasbynens/mothereff.in/blob/master/js-variables/eff.js and\n  https://mathiasbynens.be/notes/javascript-identifiers-es6 ###\n  jsidentifier:  ( x ) ->\n    return false unless @text x\n    return ( x.match \\\n      /// ^ (?: [ $_ ] | \\p{ID_Start} ) (?: [ $ _ \\u{200c} \\u{200d} ] | \\p{ID_Continue} )* $ ///u )?\n\n\n  #=========================================================================================================\n  # Container Types\n  #---------------------------------------------------------------------------------------------------------\n  list:          ( x ) -> Array.isArray x\n  set:           ( x ) -> x instanceof Set\n  map:           ( x ) -> x instanceof Map\n  sized:         ( x ) -> ( @size_of x, @_signals.nothing ) isnt @_signals.nothing\n  iterable:      ( x ) -> x? and x[ Symbol.iterator ]?\n  container:     ( x ) -> ( typeof x ) isnt 'string' and ( @iterable x ) and ( @sized x )\n\n  #=========================================================================================================\n  # Numeric Types\n  #---------------------------------------------------------------------------------------------------------\n  numeric:       ( x ) -> ( Number.isFinite x ) or ( typeof x is 'bigint' )\n  float:         ( x ) -> Number.isFinite x\n  bigint:        ( x ) -> typeof x is 'bigint'\n  integer:       ( x ) -> Number.isInteger x\n  cardinal:      ( x ) -> ( Number.isInteger x ) and ( x >= 0 )\n  zero:          ( x ) -> x is 0 ### NOTE true for -0 as well ###\n  nan:           ( x ) -> Number.isNaN x\n\n  #---------------------------------------------------------------------------------------------------------\n  even:          ( x ) ->\n    if ( Number.isInteger x )     then return ( x % 2  ) is   0\n    else if typeof x is 'bigint'  then return ( x % 2n ) is   0n\n    return false\n\n  #---------------------------------------------------------------------------------------------------------\n  odd:           ( x ) ->\n    if ( Number.isInteger x )     then return ( x % 2  ) isnt 0\n    else if typeof x is 'bigint'  then return ( x % 2n ) isnt 0n\n    return false\n\n\n  #=========================================================================================================\n  # Other Types\n  #---------------------------------------------------------------------------------------------------------\n  boolean:       ( x ) -> ( x is true ) or ( x is false )\n  object:        ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n  function:      ( x ) -> ( Object::toString.call x ) is '[object Function]'\n\n  #---------------------------------------------------------------------------------------------------------\n  @class\n    isa:        ( x ) -> ( ( Object::toString.call x ) is '[object Function]' ) and \\\n      ( Object.getOwnPropertyDescriptor x, 'prototype' )?.writable is false\n    # template:   ->\n\n  #---------------------------------------------------------------------------------------------------------\n  @asyncfunction\n    isa:        ( x ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n    template:   ->\n\n  #---------------------------------------------------------------------------------------------------------\n  @symbol\n    isa:        ( x ) -> ( typeof x ) is 'symbol'\n    template:   Symbol ''\n    create:     ( x ) -> Symbol x\n\n  #---------------------------------------------------------------------------------------------------------\n  @knowntype\n    isa:        ( x ) ->\n      return false unless ( @isa.text x ) and ( x.length > 0 )\n      return GUY.props.has @registry, x\n\n\n"
  ]
}