{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/props.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n#===========================================================================================================\n{ rpr   }                 = require './trm'\n{ debug }                 = console\n\n\n#===========================================================================================================\ntemplates =\n  acquire_depth_first:\n    target:     null\n    filter:     null\n    generate:   ( x ) -> yield from [ x, ] ### 'generative identity element' ###\n    decorator:  null\n    descriptor: null\n    overwrite:  false\n\n\n#===========================================================================================================\n@_excluded_public_keys = Object.freeze [ 'constructor', ]\n\n#-----------------------------------------------------------------------------------------------------------\n@public_keys = ( owner ) ->\n  ### thx to https://stackoverflow.com/a/8024294/7568091 ###\n  return [] unless owner?\n  R = new Set()\n  loop\n    for name in Object.getOwnPropertyNames owner\n      continue if ( typeof name ) is 'symbol'\n      continue if name in @_excluded_public_keys\n      continue if name.startsWith '_'\n      R.add name\n    owner = Object.getPrototypeOf owner\n    break unless owner?\n    break if owner is Object::\n  return [ R..., ];\n\n#-----------------------------------------------------------------------------------------------------------\n@nameit = ( name, f ) -> Object.defineProperty f, 'name', { value: name, }; f\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT code duplication with `GUY.props.hide()` ###\n@hide = hide  = ( object, name, value ) => Object.defineProperty object, name,\n    enumerable:   false\n    writable:     true\n    configurable: true\n    value:        value\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT code duplication with `GUY.props.get_prototype_chain()` ###\nobj_proto = Object.getPrototypeOf Object\n@get_prototype_chain = ( x ) ->\n  return [] unless x?\n  R = [ x, ]\n  loop\n    break unless ( x = Object.getPrototypeOf x )?\n    break if x in [ Object, Object::, obj_proto, ]\n    R.push x\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@walk_depth_first_property_descriptors = ( x ) ->\n  return null unless x?\n  for owner in ( @get_prototype_chain x ).reverse()\n    for key, descriptor of Object.getOwnPropertyDescriptors owner\n      continue if key is 'constructor'\n      yield { owner, key, descriptor, }\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@acquire_depth_first = ( source, cfg ) ->\n  cfg     = { templates.acquire_depth_first..., cfg..., }\n  target  = cfg.target ? {}\n  seen    = new Set()\n  for { owner, key, descriptor, } from @walk_depth_first_property_descriptors source\n    ### `validate.boolean cfg.filter ...` ###\n    if cfg.filter? then continue unless cfg.filter { target, owner, key, descriptor, }\n    if seen.has key\n      switch cfg.overwrite\n        when 'ignore' then continue\n        when true then null\n        when false\n          throw new Error \"^props.acquire_depth_first@1^ duplicate key #{rpr key} disallowed \" + \\\n            \"because `overwrite` set to `false`\"\n        else\n          throw new Error \"^props.acquire_depth_first@2^ illegal value for `overwrite` \" + \\\n            \"#{rpr cfg.overwrite}; expected one of `true`, `false`, `'ignore'`\"\n    seen.add key\n    for g from cfg.generate { target, owner, key, descriptor, }\n      Object.assign g.descriptor, cfg.descriptor                                           if cfg.descriptor?\n      g.descriptor.value = cfg.decorator { target, owner, key, descriptor: g.descriptor, } if cfg.decorator?\n      Object.defineProperty target, g.key, g.descriptor\n  return target\n"
  ]
}