{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/types.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n#===========================================================================================================\nprops                     = null\n{ debug }                 = console\n\n\n#===========================================================================================================\nclass Isa\n\n  #=========================================================================================================\n  # Bottom Types\n  #---------------------------------------------------------------------------------------------------------\n  null:          ( x ) -> x is null\n  undefined:     ( x ) -> x is undefined\n\n  #=========================================================================================================\n  # Textual Types\n  #---------------------------------------------------------------------------------------------------------\n  text:          ( x ) -> ( typeof x ) is 'string'\n  codepoint:     ( x ) -> ( @isa.text x ) and ( /^.$/u.test x )\n  regex:         ( x ) -> ( Object::toString.call x ) is '[object RegExp]'\n  buffer:        ( x ) -> ( globalThis.Buffer?.isBuffer ? -> false ) x\n\n  #---------------------------------------------------------------------------------------------------------\n  ### thx to https://github.com/mathiasbynens/mothereff.in/blob/master/js-variables/eff.js and\n  https://mathiasbynens.be/notes/javascript-identifiers-es6 ###\n  jsidentifier:  ( x ) -> ( @isa.text x ) and ( x.match \\\n    /// ^ (?: [ $_ ] | \\p{ID_Start} ) (?: [ $ _ \\u{200c} \\u{200d} ] | \\p{ID_Continue} )* $ ///u )?\n\n  #=========================================================================================================\n  # Container Types\n  #---------------------------------------------------------------------------------------------------------\n  list:       ( x ) -> Array.isArray x\n  set:        ( x ) -> x instanceof Set\n  map:        ( x ) -> x instanceof Map\n  # sized:      ( x ) -> try ( ( Reflect.has x, 'length' ) or ( Reflect.has x, 'size' ) ) catch error then false\n\n  # container:  ( x ) -> ( typeof x ) isnt 'string' and ( @isa.iterable x ) and ( @isa.sized x )\n  # iterable:   ( x ) -> ( ( typeof x ) is 'string' ) and try ( Reflect.has Symbol.iterator ) catch error then false\n\n  #=========================================================================================================\n  # Numeric Types\n  #---------------------------------------------------------------------------------------------------------\n  infinity:      ( x ) -> ( x is +Infinity ) or ( x is -Infinity )\n  float:         ( x ) -> Number.isFinite x\n  numeric:       ( x ) -> ( Number.isFinite x ) or ( typeof x is 'bigint' )\n  bigint:        ( x ) -> typeof x is 'bigint'\n  integer:       ( x ) -> Number.isInteger x\n  codepointid:   ( x ) -> ( @isa.integer x ) and ( 0x00000 <= x <= 0x1ffff )\n  cardinal:      ( x ) -> ( Number.isInteger x ) and ( x >= 0 )\n  zero:          ( x ) -> x is 0 ### NOTE true for -0 as well ###\n  nan:           ( x ) -> Number.isNaN x\n  nonzero:       ( x ) -> ( @isa.numeric x ) and ( not @isa.zero x )\n\n  #---------------------------------------------------------------------------------------------------------\n  even:          ( x ) -> ( Number.isInteger x ) and ( ( x % 2 ) is   0 )\n  odd:           ( x ) -> ( Number.isInteger x ) and ( ( x % 2 ) isnt 0 )\n\n  #=========================================================================================================\n  # Classes\n  #---------------------------------------------------------------------------------------------------------\n  class:          ( x ) ->\n    ( ( Object::toString.call x ) is '[object Function]' ) and \\\n      ( Object.getOwnPropertyDescriptor x, 'prototype' )?.writable is false\n\n  #=========================================================================================================\n  # Other Types\n  #---------------------------------------------------------------------------------------------------------\n  boolean:        ( x ) -> ( x is true ) or ( x is false )\n  object:         ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n  buffer:         ( x ) -> if globalThis.Buffer? then Buffer.isBuffer x else false\n  function:       ( x ) -> ( Object::toString.call x ) is '[object Function]'\n  asyncfunction:  ( x ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n  symbol:         ( x ) -> ( typeof x ) is 'symbol'\n  keyowner:       ( x ) -> return true for _ of x ? {}; return false\n\n  #=========================================================================================================\n  # Existential Types\n  #---------------------------------------------------------------------------------------------------------\n  nothing:        ( x ) -> not x?\n  something:      ( x ) -> x?\n  anything:       ( x ) -> true\n\n  #=========================================================================================================\n  # Declaration Types\n  #---------------------------------------------------------------------------------------------------------\n  $type_declaration: ( x ) ->\n    ( @isa.$known_type_name x ) or \\\n    ( @isa.$type_declaration_function x ) or \\\n    ( @isa.$type_declaration_object x )\n\n  #---------------------------------------------------------------------------------------------------------\n  $type_declaration_function: ( x ) -> ( @isa.function x ) and ( x.length is 1 )\n  $known_type_name: ( x ) -> ( @isa.jsidentifier x ) and ( @isa.$type_declaration_function @isa[ x ] )\n\n  #---------------------------------------------------------------------------------------------------------\n  $type_declaration_fields_object: ( x ) ->\n    return false unless ( @isa.object x )\n    for k, v of x\n      return false unless @isa.jsidentifier k\n      return false unless @isa.$type_declaration x\n    return true\n\n  #---------------------------------------------------------------------------------------------------------\n  ### NOTE to be rewitten in object style ###\n  $type_declaration_object: ( x ) ->\n    return false unless @isa.keyowner                             x\n    return false unless @isa.optional_$type_declaration_function  x.isa\n    return false unless @isa.optional_$type_declaration_function  x.create\n    return false unless @isa.optional_$type_declaration_object    x.fields\n    return false unless @isa.optional_$type_declaration_template  x.template\n    return false unless @isa.optional_function                    x.cast\n    return true\n\n\n#===========================================================================================================\ndefaults                  = Object.freeze\n  types_cfg:\n    declarations: Isa::\n\n\n#===========================================================================================================\nclass _Intertype\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    cfg = { defaults.types_cfg..., cfg..., }\n    @_collect_and_generate_declarations cfg.declarations\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _isa_optional: ( key, type, x ) -> ( not x? ) or ( @isa[ type ] x )\n\n  #---------------------------------------------------------------------------------------------------------\n  _validate: ( key, type, x ) ->\n    # debug '^_Intertype::_validate@1^', \"#{key} #{type} #{x}\"\n    return x if ( @isa[ type ] x )\n    ### TAINT put message into a resource object? ###\n    throw new Error \"expected a #{key}, got a #{@type_of x}\"\n\n  #---------------------------------------------------------------------------------------------------------\n  _validate_optional: ( key, type, x ) ->\n    return x if ( not x? ) or ( @isa[ type ] x )\n    ### TAINT put message into a resource object? ###\n    throw new Error \"expected a #{key}, got a #{@type_of x}\"\n\n  #---------------------------------------------------------------------------------------------------------\n  _collect_and_generate_declarations: ( declarations ) ->\n    props        ?= require './props'\n    @isa          = {}\n    @validate     = {}\n    props.hide @, '_isa_methods', []\n    me            = @\n    #.......................................................................................................\n    cfg =\n      descriptor: { enumerable: true, }\n      overwrite:  false\n      # filter: ({ key, }) -> not key.startsWith '_'\n      #.....................................................................................................\n      generator:  ({ target, owner, key, descriptor, }) ->\n        type = key\n        yield { target: me.isa, key, descriptor, }\n        #...................................................................................................\n        # optional_$type\n        yield do ( key = \"optional_#{type}\", type ) ->\n          value       = ( x ) -> me._isa_optional key, type, x\n          descriptor  = { descriptor..., value, }\n          return { target: me.isa, key, descriptor, }\n        #...................................................................................................\n        # validate_$type\n        yield do ( key = type, type ) ->\n          value       = ( x ) => me._validate key, type, x\n          descriptor  = { descriptor..., value, }\n          return { target: me.validate, key, descriptor, }\n        #...................................................................................................\n        # validate_optional_$type\n        yield do ( key = \"optional_#{type}\", type ) ->\n          value       = ( x ) => me._validate_optional key, type, x\n          descriptor  = { descriptor..., value, }\n          return { target: me.validate, key, descriptor, }\n        #...................................................................................................\n        return null\n      #.....................................................................................................\n      decorator:  ({ target, owner, key: type, descriptor: { value, }, }) ->\n        switch target\n          when me.isa\n            value = props.nameit \"isa_#{type}\", value.bind me\n            unless ( type.startsWith 'optional_' ) or ( type in [ 'nothing', 'something', 'anything', ] )\n              me._isa_methods.push [ type, value, ]\n          when me.validate\n            value = props.nameit \"validate_#{type}\", value.bind me\n        return { value, }\n    #.......................................................................................................\n    props.acquire_depth_first declarations, cfg\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  type_of: ( x ) ->\n    for [ type, isa_method, ] in @_isa_methods\n      return type if isa_method x\n    return type.toLowerCase() unless ( type = @get_denicola_device_name x ) is '0'\n    ### TAINT return class name? ###\n    ### TAINT raise exception? ###\n    return 'something'\n\n  #---------------------------------------------------------------------------------------------------------\n  get_miller_device_name:   ( x ) -> R = Object::toString.call x; R[ 8 ... R.length - 1 ]\n  get_denicola_device_name: ( x ) -> x?.constructor.name ? '0'\n\n  #---------------------------------------------------------------------------------------------------------\n  get_carter_device_name: ( x, miller_device_name = null ) ->\n    miller_device_name ?= Object::toString.call x\n    return 'other'  unless miller_device_name in [ '[object Function]', 'Function', ]\n    return 'fn'     unless ( descriptor = Object.getOwnPropertyDescriptor x, 'prototype' )?\n    return 'fn'     if descriptor.writable\n    return 'class'\n\n  #---------------------------------------------------------------------------------------------------------\n  get_type_signature: ( x ) -> [\n    ( typeof                    x                   )\n    ( @get_miller_device_name   x                   )\n    ( @get_denicola_device_name x                   )\n    ( @get_carter_device_name   x                   )\n    ( if Number.isNaN           x then 'N' else '0' ) ].join '/'\n\n\n#===========================================================================================================\nclass Intertype extends _Intertype\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super cfg\n    @_transform_and_validate_declarations()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _collect_and_generate_declarations: ( declarations ) ->\n    props  ?= require './props'\n    props.hide @, '_types', new _Intertype() ### NOTE could use custom declarations ###\n    declarations  = if @_types.isa.class declarations then ( declarations:: ) else ( declarations )\n    return super declarations\n\n  #---------------------------------------------------------------------------------------------------------\n  _transform_and_validate_declarations: ->\n    # debug '^Intertype::_transform_and_validate_declarations@1^'\n    for k, v of @isa\n      # debug '^Intertype::_transform_and_validate_declarations@1^', k, v\n      unless ( @validate.jsidentifier k ) then null\n      unless ( @validate.$type_declaration k ) then null\n    return null\n\n\n#===========================================================================================================\nmodule.exports            = new Intertype()\nmodule.exports.Isa        = Isa\nmodule.exports.Intertype  = Intertype\n\n"
  ]
}