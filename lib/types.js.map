{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/types.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,GAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,KAAA;;;EAGA,KAAA,GAA4B;;EAC5B,CAAA,CAAE,KAAF,CAAA,GAA4B,OAA5B;;EACA,MAAA,GAA4B,MAAA,CAAO,QAAP,EAL5B;;;EASM,WAAN,MAAA,SAAA;IACE,WAAc,CAAE,CAAF,CAAA;MACZ,IAAC,CAAA,KAAD,GAAS,EAAb;;AAEI,aAAO;IAHK,CAAhB;;;IAKE,GAAK,CAAE,IAAI,MAAN,CAAA;AACP,UAAA;MAAI,IAAY,CAAA,KAAO,MAAnB;AAAA,eAAO,EAAP;;MACA,IAAkB,CAAE,CAAA,GAAI,IAAC,CAAA,KAAP,CAAA,YAA0B,QAA5C;AAAA,eAAO,CAAC,CAAC,GAAF,CAAA,EAAP;;AACA,aAAO;IAHJ;;EANP,EATA;;;;;EAsBM,WAAN,MAAA,SAAA,QAAuB,SAAvB,CAAA,EAtBA;;;EAyBM,UAAN,MAAA,QAAA,QAAsB,SAAtB,CAAA,EAzBA;;;;;EA6BM,WAAN,MAAA,SAAA,QAAuB,SAAvB,CAAA,EA7BA;;;;;;;;;;;;;;;;;EA6CM,SAAN,MAAA,OAAA,QAAqB,SAArB,CAAA;;EACM,SAAN,MAAA,OAAA,QAAqB,SAArB,CAAA,EA9CA;;;EAiDA,SAAA,GAAY,QAAA,CAAE,CAAF,EAAK,IAAI,IAAT,CAAA;IAAmB,IAAG,CAAE,CAAA,YAAa,QAAf,CAAA,IAA6B,CAAE,CAAA,YAAa,OAAf,CAAhC;aAA8D,CAAC,CAAC,GAAF,CAAM,CAAN,EAA9D;KAAA,MAAA;aAA2E,EAA3E;;EAAnB,EAjDZ;;;EAqDM,MAAN,MAAA,IAAA;;;UAgBE,CAAA,eAAA,CAAA;UACA,CAAA,gBAAA,CAAA;UACA,CAAA,gBAAA,CAAA;;UAKA,CAAA,kBAAA,CAAA;UACA,CAAA,gBAAA,CAAA;UACA,CAAA,iBAAA,CAAA;UACA,CAAA,wBAAA,CAAA;UACA,CAAA,iBAAA,CAAA;UACA,CAAA,kBAAA,CAAA;UACA,CAAA,iBAAA,CAAA;UACA,CAAA,kBAAA,CAAA;UACA,CAAA,mBAAA,CAAA;UACA,CAAA,mBAAA,CAAA;UA0BA,CAAA,oBAAA,CAAA;UAEA,CAAA,sBAAA,CAAA;UAIA,CAAA,kBAAA,CAAA;;;;UAqBA,CAAA,WAAA,CAAA;UAYA,CAAA,wBAAA,CAAA;UACA,CAAA,6BAAA,CAAA;UACA,CAAA,qBAAA,CAAA;UACA,CAAA,gBAAA,CAAA;;UAEA,CAAA,mBAAA,CAAA;UACA,CAAA,mBAAA,CAAA;UACA,CAAA,kBAAA,CAAA;UACA,CAAA,kBAAA,CAAA;;UAEA,CAAA,cAAA,CAAA;UACA,CAAA,oBAAA,CAAA;UACA,CAAA,eAAA,CAAA;UAQA,CAAA,aAAA,CAAA;UACA,CAAA,aAAA,CAAA;UACA,CAAA,iBAAA,CAAA;;UAEA,CAAA,iBAAA,CAAA;UACA,CAAA,iBAAA,CAAA;UACA,CAAA,gBAAA,CAAA;UACA,CAAA,gBAAA,CAAA;UACA,CAAA,oBAAA,CAAA;UACA,CAAA,oBAAA,CAAA;UACA,CAAA,mBAAA,CAAA;UACA,CAAA,mBAAA,CAAA;UACA,CAAA,mBAAA,CAAA;UACA,CAAA,sBAAA,CAAA;KAhIF;;;;;IAGE,IAAe,CAAE,CAAF,CAAA;aAAS,CAAA,KAAK;IAAd;;IACf,SAAe,CAAE,CAAF,CAAA;aAAS,CAAA,KAAK;IAAd,CAJjB;;;;;IASE,IAAgB,CAAE,CAAF,CAAA;aAAS,CAAE,OAAO,CAAT,CAAA,KAAgB;IAAzB;;IAChB,GAAgB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAV,CAAF,CAAA,IAAyB,CAAE,OAAiB,CAAC,IAAlB,CAAuB,CAAvB,CAAF;IAAlC;;IAChB,UAAgB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAV,CAAF,CAAA,IAAyB,CAAE,SAAiB,CAAC,IAAlB,CAAuB,CAAvB,CAAF;IAAlC;;IAChB,aAAgB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAV,CAAF,CAAA,IAAoB,CAAK,CAAE,SAAiB,CAAC,IAAlB,CAAuB,CAAvB,CAAF;IAAlC;;IAEhB,QAAgB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAV,CAAF,CAAA,IAAoB;IAA7B;;IAChB,SAAgB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAV,CAAF,CAAA,IAAoB;IAA7B;;IAChB,SAAgB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAV,CAAF,CAAA,IAAoB;IAA7B;;IAChB,KAAgB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IAChB,MAAgB,CAAE,CAAF,CAAA;AAAQ,UAAA,GAAA,EAAA;aAAC,qFAAgC,QAAA,CAAA,CAAA;eAAG;MAAH,CAAhC,CAAA,CAA2C,CAA3C;IAAT;;IAGhB,WAAoB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACpB,SAAoB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACpB,UAAoB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACpB,iBAAoB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACpB,UAAoB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACpB,WAAoB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACpB,UAAoB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACpB,WAAoB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACpB,YAAoB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACpB,YAAoB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC,CA9BtB;;;;;IAmCE,YAAe,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAV,CAAF,CAAA,IAAoB;IAA7B,CAnCjB;;;;;IAyCE,IAAY,CAAE,CAAF,CAAA;aAAS,KAAK,CAAC,OAAN,CAAc,CAAd;IAAT;;IACZ,GAAY,CAAE,CAAF,CAAA;aAAS,CAAA,YAAa;IAAtB;;IACZ,GAAY,CAAE,CAAF,CAAA;aAAS,CAAA,YAAa;IAAtB;;IACZ,OAAY,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACZ,OAAY,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC,CA7Cd;;;;;;;;;;IAsDE,QAAkB,CAAE,CAAF,CAAA;aAAS,CAAE,CAAA,KAAK,CAAC,KAAR,CAAA,IAAsB,CAAE,CAAA,KAAK,CAAC,KAAR;IAA/B;;IAClB,KAAkB,CAAE,CAAF,CAAA;aAAS,MAAM,CAAC,QAAP,CAAgB,CAAhB;IAAT;;IAClB,aAAkB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,KAAL,CAAW,CAAX,CAAF,CAAA,IAAoB,CAAE,CAAA,KAAK,KAAP,CAApB,IAAyC,CAAE,CAAA,KAAK,CAAC,KAAR;IAAlD;;IAClB,KAAkB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,OAAL,CAAa,CAAb,CAAF,CAAA,IAAuB,CAAE,CAAA,CAAC,UAAD,IAAe,CAAf,IAAe,CAAf,IAAoB,UAApB,CAAF;IAAhC;;IAClB,eAAkB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,KAAL,CAAW,CAAX,CAAF,CAAA,IAAqB,CAAE,CAAA,CAAA,IAAK,CAAL,IAAK,CAAL,IAAU,CAAV,CAAF;IAA9B;;IAClB,OAAkB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAC,QAAP,CAAgB,CAAhB,CAAF,CAAA,IAAyB,CAAE,OAAO,CAAP,KAAY,QAAd;IAAlC;;IAClB,MAAkB,CAAE,CAAF,CAAA;aAAS,OAAO,CAAP,KAAY;IAArB;;IAClB,OAAkB,CAAE,CAAF,CAAA;aAAS,MAAM,CAAC,SAAP,CAAiB,CAAjB;IAAT;;IAClB,WAAkB,CAAE,CAAF,CAAA;aAAS,MAAM,CAAC,aAAP,CAAqB,CAArB;IAAT;;IAClB,WAAkB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,OAAL,CAAa,CAAb,CAAF,CAAA,IAAuB,CAAE,CAAA,OAAA,IAAW,CAAX,IAAW,CAAX,IAAgB,OAAhB,CAAF;IAAhC;;IAClB,QAAkB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAC,SAAP,CAAiB,CAAjB,CAAF,CAAA,IAA2B,CAAE,CAAA,IAAK,CAAP;IAApC;;IAClB,IAAkB,CAAE,CAAF,CAAA;aAAS,CAAA,KAAK,CAAE;IAAhB;;IAClB,GAAkB,CAAE,CAAF,CAAA;aAAS,MAAM,CAAC,KAAP,CAAa,CAAb;IAAT;;IAClB,OAAkB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,OAAL,CAAa,CAAb,CAAF,CAAA,IAAuB,CAAE,CAAI,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAV,CAAN;IAAhC,CAnEpB;;;IAsEE,IAAe,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAC,SAAP,CAAiB,CAAjB,CAAF,CAAA,IAA2B,CAAE,CAAE,CAAA,GAAI,CAAN,CAAA,KAAe,CAAjB;IAApC;;IACf,GAAe,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAC,SAAP,CAAiB,CAAjB,CAAF,CAAA,IAA2B,CAAE,CAAE,CAAA,GAAI,CAAN,CAAA,KAAe,CAAjB;IAApC,CAvEjB;;;;;IA4EE,KAAgB,CAAE,CAAF,CAAA;AAClB,UAAA;aAAI,CAAE,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B,mBAAjC,CAAA,0EACoD,CAAE,kBAApD,KAAgE;IAFpD;;IAOhB,IAAgB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IAChB,OAAgB,CAAE,CAAF,CAAA;aAAS,CAAE,CAAA,KAAK,IAAP,CAAA,IAAiB,CAAE,CAAA,KAAK,KAAP;IAA1B;;IAChB,IAAgB,CAAE,CAAF,CAAA;aAAS,CAAA,KAAK;IAAd;;IAChB,KAAgB,CAAE,CAAF,CAAA;aAAS,CAAA,KAAK;IAAd;;IAChB,MAAgB,CAAE,CAAF,CAAA;aAAS,WAAA,IAAO,CAAE,OAAO,CAAP,KAAY,QAAd,CAAP,IAAoC,CAAE,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B,iBAAjC;IAA7C;;IAChB,MAAgB,CAAE,CAAF,CAAA;MAAS,IAAG,yBAAH;eAA2B,MAAM,CAAC,QAAP,CAAgB,CAAhB,EAA3B;OAAA,MAAA;eAAkD,MAAlD;;IAAT;;IAChB,MAAgB,CAAE,CAAF,CAAA;aAAS,CAAE,OAAO,CAAT,CAAA,KAAgB;IAAzB;;IAChB,KAAgB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IAChB,MAAgB,CAAE,CAAF,CAAA;aAAS,CAAA,KAAK;IAAd,CA3FlB;;;IA6FE,QAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACxB,aAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACxB,iBAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACxB,sBAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACxB,cAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACxB,SAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IAExB,YAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACxB,YAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACxB,WAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IACxB,WAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAAA,KAA+B;IAAxC;;IAExB,OAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,aAAL,CAAmB,CAAnB,CAAF,CAAA,IAA4B,CAAE,IAAC,CAAA,GAAG,CAAC,QAAL,CAAc,CAAd,CAAF;IAArC;;IACxB,aAAwB,CAAE,CAAF,CAAA;aAAS,CAAA,YAAa;IAAtB;;IACxB,QAAwB,CAAE,CAAF,CAAA;AAAQ,UAAA;aAAC,IAAC,CAAA,GAAG,CAAC,QAAL,CAAgB,IAAC,CAAA,OAAD,qDAAmB,IAAnB,CAAhB;IAAT,CA3G1B;;;;;;;IAkHE,SAAwB,CAAE,CAAF,CAAA;AAAQ,UAAA;MAAC,KAAA,uBAAA;AAAA,eAAO;MAAP;AAA6B,aAAO;IAA7C;;IACxB,MAAwB,CAAE,CAAF,CAAA;aAAS,MAAM,CAAC,QAAP,CAAqB,CAArB;IAAT;;IACxB,MAAwB,CAAE,CAAF,CAAA;aAAS,MAAM,CAAC,QAAP,CAAqB,CAArB;IAAT;;IACxB,UAAwB,CAAE,CAAF,CAAA;aAAS,MAAM,CAAC,YAAP,CAAqB,CAArB;IAAT;;IAExB,UAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAa,CAAb,CAAF,CAAA,IAAuB,CAAE,CAAC,CAAC,MAAF,KAAc,CAAhB;IAAhC;;IACxB,UAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAa,CAAb,CAAF,CAAA,IAAuB,CAAE,CAAC,CAAC,MAAF,KAAc,CAAhB;IAAhC;;IACxB,SAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,GAAL,CAAa,CAAb,CAAF,CAAA,IAAuB,CAAE,CAAC,CAAC,IAAF,KAAc,CAAhB;IAAhC;;IACxB,SAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,GAAL,CAAa,CAAb,CAAF,CAAA,IAAuB,CAAE,CAAC,CAAC,IAAF,KAAc,CAAhB;IAAhC;;IACxB,aAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAa,CAAb,CAAF,CAAA,IAAuB,CAAE,CAAC,CAAC,MAAF,KAAc,CAAhB;IAAhC;;IACxB,aAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAa,CAAb,CAAF,CAAA,IAAuB,CAAE,CAAC,CAAC,MAAF,KAAc,CAAhB;IAAhC;;IACxB,YAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,GAAL,CAAa,CAAb,CAAF,CAAA,IAAuB,CAAE,CAAC,CAAC,IAAF,KAAc,CAAhB;IAAhC;;IACxB,YAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,GAAL,CAAa,CAAb,CAAF,CAAA,IAAuB,CAAE,CAAC,CAAC,IAAF,KAAc,CAAhB;IAAhC;;IACxB,YAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,MAAL,CAAa,CAAb,CAAF,CAAA,IAAuB,CAAE,CAAI,IAAC,CAAA,GAAG,CAAC,SAAL,CAAe,CAAf,CAAN;IAAhC;;IACxB,eAAwB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,MAAL,CAAa,CAAb,CAAF,CAAA,IAAuB,CAAM,IAAC,CAAA,GAAG,CAAC,SAAL,CAAe,CAAf,CAAN;IAAhC,CAhI1B;;;IAkIE,MAAwB,CAAE,CAAF,CAAA;aAAS,CAAI,CAAI;IAAjB;;IACxB,KAAwB,CAAE,CAAF,CAAA;aAAa,CAAI;IAAjB,CAnI1B;;;;;IAwIE,OAAgB,CAAE,CAAF,CAAA;aAAa;IAAb;;IAChB,SAAgB,CAAE,CAAF,CAAA;aAAS;IAAT;;IAChB,QAAgB,CAAE,CAAF,CAAA;aAAS;IAAT,CA1IlB;;;;;IA+IE,iBAAmB,CAAE,CAAF,CAAA;aACjB,CAAE,IAAC,CAAA,GAAG,CAAC,gBAAL,CAAsB,CAAtB,CAAF,CAAA,IACA,CAAE,IAAC,CAAA,GAAG,CAAC,0BAAL,CAAgC,CAAhC,CAAF,CADA,IAEA,CAAE,IAAC,CAAA,GAAG,CAAC,wBAAL,CAA8B,CAA9B,CAAF;IAHiB,CA/IrB;;;IAqJE,0BAA4B,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,QAAL,CAAc,CAAd,CAAF,CAAA,IAAwB,CAAE,CAAC,CAAC,MAAF,KAAY,CAAd;IAAjC;;IAC5B,gBAAkB,CAAE,CAAF,CAAA;aAAS,CAAE,IAAC,CAAA,GAAG,CAAC,YAAL,CAAkB,CAAlB,CAAF,CAAA,IAA4B,CAAE,IAAC,CAAA,GAAG,CAAC,0BAAL,CAAgC,IAAC,CAAA,GAAG,CAAE,CAAF,CAApC,CAAF;IAArC,CAtJpB;;;IAyJE,+BAAiC,CAAE,CAAF,CAAA;AACnC,UAAA,CAAA,EAAA;MAAI,KAAoB,CAAE,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ,CAAF,CAApB;AAAA,eAAO,MAAP;;MACA,KAAA,MAAA;;QACE,KAAoB,IAAC,CAAA,GAAG,CAAC,YAAL,CAAkB,CAAlB,CAApB;AAAA,iBAAO,MAAP;;QACA,KAAoB,IAAC,CAAA,GAAG,CAAC,iBAAL,CAAuB,CAAvB,CAApB;AAAA,iBAAO,MAAP;;MAFF;AAGA,aAAO;IALwB,CAzJnC;;;;IAkKE,wBAA0B,CAAE,CAAF,CAAA;MACxB,KAAoB,IAAC,CAAA,GAAG,CAAC,QAAL,CAA0C,CAA1C,CAApB;AAAA,eAAO,MAAP;;MACA,KAAoB,IAAC,CAAA,GAAG,CAAC,mCAAL,CAA0C,CAAC,CAAC,GAA5C,CAApB;AAAA,eAAO,MAAP;;MACA,KAAoB,IAAC,CAAA,GAAG,CAAC,mCAAL,CAA0C,CAAC,CAAC,MAA5C,CAApB;AAAA,eAAO,MAAP;;MACA,KAAoB,IAAC,CAAA,GAAG,CAAC,iCAAL,CAA0C,CAAC,CAAC,MAA5C,CAApB;AAAA,eAAO,MAAP;;MACA,KAAoB,IAAC,CAAA,GAAG,CAAC,mCAAL,CAA0C,CAAC,CAAC,QAA5C,CAApB;AAAA,eAAO,MAAP;;MACA,KAAoB,IAAC,CAAA,GAAG,CAAC,iBAAL,CAA0C,CAAC,CAAC,IAA5C,CAApB;AAAA,eAAO,MAAP;;AACA,aAAO;IAPiB;;EApK5B,EArDA;;;EAoOA,QAAA,GAA4B,MAAM,CAAC,MAAP,CAC1B;IAAA,SAAA,EACE;MAAA,YAAA,EAAc,GAAG,CAAA;IAAjB;EADF,CAD0B,EApO5B;;;EA0OM,aAAN,MAAA,WAAA,CAAA;;IAGE,WAAa,CAAE,GAAF,CAAA;;QACX,QAAc,OAAA,CAAQ,SAAR;;MACd,GAAA,GAAc,CAAE,GAAA,QAAQ,CAAC,SAAX,EAAyB,GAAA,GAAzB;MACd,IAAC,CAAA,kCAAD,CAAoC,GAAG,CAAC,YAAxC;MACA,KAAK,CAAC,IAAN,CAAW,IAAX,EAAc,UAAd,EAA0B,IAAC,CAAA,QAAQ,CAAC,IAAV,CAAgB,IAAhB,CAA1B;MACA,KAAK,CAAC,IAAN,CAAW,IAAX,EAAc,SAAd,EAA0B,IAAC,CAAA,OAAO,CAAC,IAAT,CAAgB,IAAhB,CAA1B;AACA,aAAO;IANI,CADf;;;IAUE,IAAM,CAAE,GAAF,EAAO,IAAP,EAAa,CAAb,EAAgB,GAAhB,CAAA;AACR,UAAA,OAAA;;;;;;MAKI,IAAK,CAAA,YAAa,QAAlB;QACE,IAAqB,qBAArB;AAAA,iBAAO,KAAP;SADF;OALJ;;MAQI,IAAK,CAAA,YAAa,MAAlB;QACE,IAAmB,qBAAnB;AAAA,iBAAO,KAAP;;QACA,IAAmB,0BAAnB;AAAA,iBAAO,KAAP;;QACA,KAAA,YAAA;UACE,KAAoB,GAAG,CAAC,IAAJ,CAAS,IAAT,EAAY,OAAZ,CAApB;AAAA,mBAAO,MAAP;;QADF;AAEA,eAAO,KALT;;OAAA,MAOK,IAAK,CAAA,YAAa,MAAlB;QACH,IAAoB,qBAApB;AAAA,iBAAO,MAAP;;QACA,IAAoB,0BAApB;AAAA,iBAAO,MAAP;;QACA,KAAA,YAAA;UACE,IAAe,GAAG,CAAC,IAAJ,CAAS,IAAT,EAAY,OAAZ,CAAf;AAAA,mBAAO,KAAP;;QADF;AAEA,eAAO,MALJ;;OAAA,MAOA,IAAK,CAAA,YAAa,OAAlB;AACH,eAAO,MADJ;OAtBT;;AAyBI,aAAO,GAAG,CAAC,IAAJ,CAAS,IAAT,EAAY,CAAZ;IA1BH,CAVR;;;IAuCE,OAAS,CAAE,GAAF,EAAO,IAAP,EAAa,CAAb,EAAgB,GAAhB,CAAA;MAKP,IAAyB,CAAA,YAAa,QAAtC;;;;;AAAA,eAAO,EAAP;;MACA,IAAuB,CAAE,GAAG,CAAC,IAAJ,CAAS,IAAT,EAAY,CAAZ,CAAF,CAAA,KAAqB,IAA5C;AAAA,eAAO,SAAA,CAAU,CAAV,EAAP;;AACA,aAAO,IAAI,OAAJ,CAAY,CAAZ;IAPA,CAvCX;;;IAiDE,SAAW,CAAE,GAAF,EAAO,IAAP,EAAa,CAAb,CAAA,EAAA;;MAET,IAAK,CAAA,YAAa,QAAlB;QACE,IAAgB,qBAAhB;AAAA,iBAAO,EAAP;SADF;;MAEA,KAAO,CAAE,CAAA,YAAa,OAAf,CAAP;QACE,IAAuB,CAAE,IAAC,CAAA,GAAG,CAAE,IAAF,CAAJ,CAAa,CAAb,CAAF,CAAA,KAAsB,IAA7C;AAAA,iBAAO,SAAA,CAAU,CAAV,EAAP;SADF;OAHJ;;;MAOI,MAAM,IAAI,KAAJ,CAAU,CAAA,qCAAA,CAAA,CAAwC,GAAxC,CAAA,QAAA,CAAA,CAAsD,IAAC,CAAA,OAAD,CAAS,CAAT,CAAtD,CAAA,CAAV;IARG,CAjDb;;;IA4DE,kCAAoC,CAAE,YAAF,CAAA;AACtC,UAAA,GAAA,EAAA;;QAAI,QAAgB,OAAA,CAAQ,SAAR;;MAChB,IAAC,CAAA,GAAD,GAAgB,CAAA;MAChB,IAAC,CAAA,QAAD,GAAgB,CAAA;MAChB,IAAC,CAAA,MAAD,GAAgB,CAAA;MAChB,KAAK,CAAC,IAAN,CAAW,IAAX,EAAc,cAAd,EAA8B,EAA9B;MACA,EAAA,GAAgB,KALpB;;MAOI,GAAA,GACE;QAAA,UAAA,EAAY;UAAE,UAAA,EAAY;QAAd,CAAZ;QACA,SAAA,EAAY,KADZ;;;QAIA,SAAA,EAAY,SAAA,CAAC,CAAE,MAAF,EAAU,KAAV,EAAiB,GAAjB,EAAsB,UAAtB,CAAD,CAAA;AAClB,cAAA,GAAA,EAAA,IAAA,EAAA;UAAQ,IAAA,GAAc;UACd,GAAA,GAAc,UAAU,CAAC;UACzB,KAAA,GAAc,QAAA,CAAE,CAAF,CAAA;mBAAS,EAAE,CAAC,IAAH,CAAQ,GAAR,EAAa,IAAb,EAAmB,CAAnB,EAAsB,GAAtB;UAAT;UACd,UAAA,GAAc,CAAE,GAAA,UAAF,EAAiB,KAAjB;UACd,MAAM,CAAA;YAAE,MAAA,EAAQ,EAAE,CAAC,GAAb;YAAkB,GAAlB;YAAuB;UAAvB,CAAA,EAJd;;;UAOQ,MAAS,CAAA,QAAA,CAAE,GAAF,EAAc,IAAd,CAAA;YACP,KAAA,GAAc,CAAE,CAAF,CAAA,GAAA;qBAAS,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB,IAAhB,EAAsB,CAAtB,EAAyB,GAAzB;YAAT;YACd,UAAA,GAAc,CAAE,GAAA,UAAF,EAAiB,KAAjB;AACd,mBAAO;cAAE,MAAA,EAAQ,EAAE,CAAC,MAAb;cAAqB,GAArB;cAA0B;YAA1B;UAHA,CAAA,EAAQ,MAAM,MAP/B;;;UAaQ,MAAS,CAAA,QAAA,CAAE,GAAF,EAAc,IAAd,CAAA;YACP,KAAA,GAAc,CAAE,CAAF,CAAA,GAAA;qBAAS,EAAE,CAAC,SAAH,CAAa,GAAb,EAAkB,IAAlB,EAAwB,CAAxB;YAAT;YACd,UAAA,GAAc,CAAE,GAAA,UAAF,EAAiB,KAAjB;AACd,mBAAO;cAAE,MAAA,EAAQ,EAAE,CAAC,QAAb;cAAuB,GAAvB;cAA4B;YAA5B;UAHA,CAAA,EAAQ,MAAM,MAb/B;;AAkBQ,iBAAO;QAnBG,CAJZ;;QAyBA,SAAA,EAAY,QAAA,CAAC;YAAE,MAAF;YAAU,KAAV;YAAiB,GAAA,EAAK,IAAtB;YAA4B,UAAA,EAAY,CAAE,KAAF;UAAxC,CAAD,CAAA;AACV,kBAAO,MAAP;AAAA,iBACO,EAAE,CAAC,GADV;cAEI,KAAA,GAAQ,KAAK,CAAC,MAAN,CAAa,CAAA,IAAA,CAAA,CAAO,IAAP,CAAA,CAAb,EAA4B,KAAK,CAAC,IAAN,CAAW,EAAX,CAA5B;cACR,MACI,CAAE,IAAI,CAAC,UAAL,CAAgB,WAAhB,CAAF,CAAA,IACA,CAAE,IAAI,CAAC,UAAL,CAAgB,GAAhB,CAAF,CADA,IAEA,CAAE,SAAU,aAAV,SAAqB,eAArB,SAAkC,UAApC,EAHJ;gBAIE,EAAE,CAAC,YAAY,CAAC,IAAhB,CAAqB,CAAE,IAAF,EAAQ,KAAR,CAArB,EAJF;;AAFG;AADP,iBAQO,EAAE,CAAC,QARV;cASI,KAAA,GAAQ,KAAK,CAAC,MAAN,CAAa,CAAA,SAAA,CAAA,CAAY,IAAZ,CAAA,CAAb,EAAiC,KAAK,CAAC,IAAN,CAAW,EAAX,CAAjC;AATZ;AAUA,iBAAO,CAAE,KAAF;QAXG;MAzBZ,EARN;;MA8CI,KAAK,CAAC,mBAAN,CAA0B,YAA1B,EAAwC,GAAxC;AACA,aAAO;IAhD2B,CA5DtC;;;IA+GE,QAAU,CAAE,CAAF,CAAA;aAAS,IAAI,QAAJ,CAAa,CAAb;IAAT;;IACV,MAAU,CAAE,CAAF,CAAA;MAAS,IAAG,CAAA,YAAa,OAAhB;eAA6B,EAA7B;OAAA,MAAA;eAAoC,IAAI,MAAJ,CAAW,CAAX,EAApC;;IAAT;;IACV,MAAU,CAAE,CAAF,CAAA;MAAS,IAAG,CAAA,YAAa,OAAhB;eAA6B,EAA7B;OAAA,MAAA;eAAoC,IAAI,MAAJ,CAAW,CAAX,EAApC;;IAAT,CAjHZ;;;IAoHE,OAAS,CAAE,CAAF,CAAA;AACX,UAAA,CAAA,EAAA,UAAA,EAAA,GAAA,EAAA,GAAA,EAAA;AAAI;MAAA,KAAA,qCAAA;QAAI,CAAE,IAAF,EAAQ,UAAR;QACF,IAAe,UAAA,CAAW,CAAX,CAAf;AAAA,iBAAO,KAAP;;MADF;MAEA,IAAiC,CAAE,IAAA,GAAO,IAAC,CAAA,wBAAD,CAA0B,CAA1B,CAAT,CAAA,KAA0C,GAA3E;AAAA,eAAO,IAAI,CAAC,WAAL,CAAA,EAAP;OAFJ;;;AAKI,aAAO;IANA,CApHX;;;IA6HE,sBAA0B,CAAE,CAAF,CAAA;AAAQ,UAAA;MAAC,CAAA,GAAI,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB;aAAyB,CAAC;IAAvC;;IAC1B,wBAA0B,CAAE,CAAF,CAAA;AAAQ,UAAA;6EAAuB;IAA/B,CA9H5B;;;IAiIE,sBAAwB,CAAE,CAAF,EAAK,qBAAqB,IAA1B,CAAA;AAC1B,UAAA;;QAAI,qBAAsB,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB;;MACtB,IAAuB,uBAAwB,uBAAxB,uBAA6C,UAApE;AAAA,eAAO,QAAP;;MACA,IAAuB,sEAAvB;AAAA,eAAO,KAAP;;MACA,IAAmB,UAAU,CAAC,QAA9B;AAAA,eAAO,KAAP;;AACA,aAAO;IALe,CAjI1B;;;IAyIE,kBAAoB,CAAE,CAAF,CAAA;aAAS,CACzB,OAA0B,CADD,EAEzB,IAAC,CAAA,sBAAD,CAA0B,CAA1B,CAFyB,EAGzB,IAAC,CAAA,wBAAD,CAA0B,CAA1B,CAHyB,EAIzB,IAAC,CAAA,sBAAD,CAA0B,CAA1B,CAJyB,EAK3B,CAAK,MAAM,CAAC,KAAP,CAAuB,CAAvB,CAAH,GAAiC,GAAjC,GAA0C,GAA5C,CAL2B,CAKwB,CAAC,IALzB,CAK8B,GAL9B;IAAT;;EA3ItB,EA1OA;;;EA8XM,YAAN,MAAA,UAAA,QAAwB,WAAxB,CAAA;;IAGE,WAAa,CAAE,GAAF,CAAA;WACX,CAAM,GAAN;MACA,IAAC,CAAA,oCAAD,CAAA;AACA,aAAO;IAHI,CADf;;;IAOE,kCAAoC,CAAE,YAAF,CAAA;;QAClC,QAAU,OAAA,CAAQ,SAAR;;MACV,KAAK,CAAC,IAAN,CAAW,IAAX,EAAc,QAAd,EAAwB,IAAI,UAAJ,CAAA,CAAxB;MACA,YAAA,GAAmB,IAAC,CAAA,MAAM,CAAC,GAAG,CAAC,KAAZ,CAAkB,YAAlB,CAAH,GAAyC,YAAY,CAAA,SAArD,GAAiE;AACjF,kBAJF,CAAA,kCAIS,CAAM,YAAN;IAJ2B,CAPtC;;;IAcE,oCAAsC,CAAA,CAAA;AACxC,UAAA,CAAA,EAAA,GAAA,EAAA;AACI;;MAAA,KAAA,QAAA;mBAAA;;QAEE,KAAO,CAAE,IAAC,CAAA,QAAQ,CAAC,YAAV,CAAuB,CAAvB,CAAF,CAAP;UAAyC,KAAzC;;QACA,KAAO,CAAE,IAAC,CAAA,QAAQ,CAAC,iBAAV,CAA4B,CAA5B,CAAF,CAAP;UAA8C,KAA9C;;MAHF;AAIA,aAAO;IAN6B;;EAhBxC,EA9XA;;;EAwZA,MAAA,GAA4B,IAAI,UAAJ,CAAA;;EAC5B,MAAM,CAAC,OAAP,GAA4B,IAAI,SAAJ,CAAA;;EAC5B,MAAM,CAAC,OAAO,CAAC,GAAf,GAA4B;;EAC5B,MAAM,CAAC,OAAO,CAAC,SAAf,GAA4B;;EAC5B,MAAM,CAAC,OAAO,CAAC,OAAf,GAA4B;;EAC5B,MAAM,CAAC,OAAO,CAAC,QAAf,GAA4B;;EAC5B,MAAM,CAAC,OAAO,CAAC,QAAf,GAA4B;;EAC5B,MAAM,CAAC,OAAO,CAAC,MAAf,GAA4B;;EAC5B,MAAM,CAAC,OAAO,CAAC,MAAf,GAA4B;AAha5B",
  "sourcesContent": [
    "\n\n'use strict'\n\n#===========================================================================================================\nprops                     = null\n{ debug }                 = console\nmisfit                    = Symbol 'misfit'\n\n\n#===========================================================================================================\nclass Sentinel\n  constructor:  ( x ) ->\n    @value = x\n    # Object.freeze @ ### TAINT really? ###\n    return undefined\n  ### TAINT do we need functionality of `r`? ###\n  get: ( r = misfit ) ->\n    return r if r isnt misfit\n    return R.get() if ( R = @value ) instanceof Sentinel\n    return R\n    # if ( @value instanceof Sentinel ) then @value.get() else @value\n\n#===========================================================================================================\nclass Optional extends Sentinel\n\n#===========================================================================================================\nclass Failure extends Sentinel\n  # get: ( r = null )  -> r ? @value ### TAINT is this special case needed? ###\n\n#===========================================================================================================\nclass Iterator extends Sentinel\n  # constructor: ( x ) ->\n  #   super x\n  #   me        = @\n  #   if ( x instanceof Optional )\n  #     @iterator = [].values()\n  #   else\n  #     @iterator = switch type = _types.type_of @value\n  #       when 'list' then @value.values()\n  #       when 'text' then ( -> yield from me.value )()\n  #       else\n  #         R if ( R = x?[Symbol.iterator] )?\n  #         throw new Error \"^Iterator::constructor@1^ unable to iterate over a #{type}\"\n  #   return undefined\n  # # [Symbol.iterator]: -> @iterator\n  # # get:          ( r = null )  -> r ? @value\nclass All_of extends Iterator\nclass Any_of extends Iterator\n\n#===========================================================================================================\nget_value = ( x, r = null ) -> if ( x instanceof Iterator ) or ( x instanceof Failure ) then x.get r else x\n\n\n#===========================================================================================================\nclass Isa\n\n  #=========================================================================================================\n  # Bottom Types\n  #---------------------------------------------------------------------------------------------------------\n  null:          ( x ) -> x is null\n  undefined:     ( x ) -> x is undefined\n\n  #=========================================================================================================\n  # Textual Types\n  #---------------------------------------------------------------------------------------------------------\n  text:           ( x ) -> ( typeof x ) is 'string'\n  chr:            ( x ) -> ( @isa.text x ) and      ( /// ^  .  $ ///us.test x )\n  blank_text:     ( x ) -> ( @isa.text x ) and      ( /// ^ \\s* $ ///us.test x )\n  nonblank_text:  ( x ) -> ( @isa.text x ) and not  ( /// ^ \\s* $ ///us.test x )\n  # codepoint:      ( x ) -> ( @isa.text x ) and      ( /^.$/u.test x )\n  int2text:       ( x ) => ( @isa.text x ) and ( x.match /^[01]+$/ )?\n  int10text:      ( x ) => ( @isa.text x ) and ( x.match /^[0-9]+$/ )?\n  int16text:      ( x ) => ( @isa.text x ) and ( x.match /^[0-9a-fA-F]+$/ )?\n  regex:          ( x ) -> ( Object::toString.call x ) is '[object RegExp]'\n  buffer:         ( x ) -> ( globalThis.Buffer?.isBuffer ? -> false ) x\n\n  #---------------------------------------------------------------------------------------------------------\n  arraybuffer:        ( x ) => ( Object::toString.call x ) is '[object ArrayBuffer]'\n  int8array:          ( x ) => ( Object::toString.call x ) is '[object Int8Array]'\n  uint8array:         ( x ) => ( Object::toString.call x ) is '[object Uint8Array]'\n  uint8clampedarray:  ( x ) => ( Object::toString.call x ) is '[object Uint8ClampedArray]'\n  int16array:         ( x ) => ( Object::toString.call x ) is '[object Int16Array]'\n  uint16array:        ( x ) => ( Object::toString.call x ) is '[object Uint16Array]'\n  int32array:         ( x ) => ( Object::toString.call x ) is '[object Int32Array]'\n  uint32array:        ( x ) => ( Object::toString.call x ) is '[object Uint32Array]'\n  float32array:       ( x ) => ( Object::toString.call x ) is '[object Float32Array]'\n  float64array:       ( x ) => ( Object::toString.call x ) is '[object Float64Array]'\n\n  #---------------------------------------------------------------------------------------------------------\n  ### thx to https://github.com/mathiasbynens/mothereff.in/blob/master/js-variables/eff.js and\n  https://mathiasbynens.be/notes/javascript-identifiers-es6 ###\n  jsidentifier:  ( x ) -> ( @isa.text x ) and ( x.match \\\n    /// ^ (?: [ $_ ] | \\p{ID_Start} ) (?: [ $ _ \\u{200c} \\u{200d} ] | \\p{ID_Continue} )* $ ///u )?\n\n  #=========================================================================================================\n  # Container Types\n  #---------------------------------------------------------------------------------------------------------\n  list:       ( x ) -> Array.isArray x\n  set:        ( x ) -> x instanceof Set\n  map:        ( x ) -> x instanceof Map\n  weakmap:    ( x ) -> ( Object::toString.call x ) is '[object WeakMap]'\n  weakset:    ( x ) -> ( Object::toString.call x ) is '[object WeakSet]'\n  # sized:      ( x ) -> try ( ( Reflect.has x, 'length' ) or ( Reflect.has x, 'size' ) ) catch error then false\n\n  # container:  ( x ) -> ( typeof x ) isnt 'string' and ( @isa.iterable x ) and ( @isa.sized x )\n  # iterable:   ( x ) -> ( ( typeof x ) is 'string' ) and try ( Reflect.has Symbol.iterator ) catch error then false\n\n  #=========================================================================================================\n  # Numeric Types\n  #---------------------------------------------------------------------------------------------------------\n  infinity:         ( x ) -> ( x is +Infinity ) or ( x is -Infinity )\n  float:            ( x ) -> Number.isFinite x\n  infinitefloat:    ( x ) => ( @isa.float x ) or ( x is Infinity ) or ( x is -Infinity )\n  int32:            ( x ) -> ( @isa.integer x ) and ( -2147483648 <= x <= 2147483647 )\n  proper_fraction:  ( x ) => ( @isa.float x ) and ( 0 <= x <= 1 )\n  numeric:          ( x ) -> ( Number.isFinite x ) or ( typeof x is 'bigint' )\n  bigint:           ( x ) -> typeof x is 'bigint'\n  integer:          ( x ) -> Number.isInteger x\n  safeinteger:      ( x ) => Number.isSafeInteger x\n  codepointid:      ( x ) -> ( @isa.integer x ) and ( 0x00000 <= x <= 0x1ffff )\n  cardinal:         ( x ) -> ( Number.isInteger x ) and ( x >= 0 )\n  zero:             ( x ) -> x is 0 ### NOTE true for -0 as well ###\n  nan:              ( x ) -> Number.isNaN x\n  nonzero:          ( x ) -> ( @isa.numeric x ) and ( not @isa.zero x )\n\n  #---------------------------------------------------------------------------------------------------------\n  even:          ( x ) -> ( Number.isInteger x ) and ( ( x % 2 ) is   0 )\n  odd:           ( x ) -> ( Number.isInteger x ) and ( ( x % 2 ) isnt 0 )\n\n  #=========================================================================================================\n  # Classes\n  #---------------------------------------------------------------------------------------------------------\n  class:          ( x ) ->\n    ( ( Object::toString.call x ) is '[object Function]' ) and \\\n      ( Object.getOwnPropertyDescriptor x, 'prototype' )?.writable is false\n\n  #=========================================================================================================\n  # Other Types\n  #---------------------------------------------------------------------------------------------------------\n  date:           ( x ) => ( Object::toString.call x ) is '[object Date]'\n  boolean:        ( x ) -> ( x is true ) or ( x is false )\n  true:           ( x ) -> x is true\n  false:          ( x ) -> x is false\n  object:         ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n  buffer:         ( x ) -> if globalThis.Buffer? then Buffer.isBuffer x else false\n  symbol:         ( x ) -> ( typeof x ) is 'symbol'\n  error:          ( x ) -> ( Object::toString.call x ) is 'error'\n  global:         ( x ) -> x is globalThis\n  #---------------------------------------------------------------------------------------------------------\n  function:               ( x ) -> ( Object::toString.call x ) is '[object Function]'\n  asyncfunction:          ( x ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n  generatorfunction:      ( x ) => ( Object::toString.call x ) is 'generatorfunction'\n  asyncgeneratorfunction: ( x ) => ( Object::toString.call x ) is 'asyncgeneratorfunction'\n  asyncgenerator:         ( x ) => ( Object::toString.call x ) is 'asyncgenerator'\n  generator:              ( x ) => ( Object::toString.call x ) is 'generator'\n  #---------------------------------------------------------------------------------------------------------\n  listiterator:           ( x ) => ( Object::toString.call x ) is '[object ArrayIterator]'\n  textiterator:           ( x ) => ( Object::toString.call x ) is '[object StringIterator]'\n  setiterator:            ( x ) => ( Object::toString.call x ) is '[object SetIterator]'\n  mapiterator:            ( x ) => ( Object::toString.call x ) is '[object MapIterator]'\n  #---------------------------------------------------------------------------------------------------------\n  promise:                ( x ) => ( @isa.nativepromise x ) or ( @isa.thenable x )\n  nativepromise:          ( x ) => x instanceof Promise\n  thenable:               ( x ) => @isa.function ( @type_of x?.then ? null )\n\n  #=========================================================================================================\n  # Generics and Qualified Types\n  #---------------------------------------------------------------------------------------------------------\n  ### Almost anything in JS can be a `$keyowner` (i.e. have one or more enumerable properties attached to it)\n  so we test for this late in the chain: ###\n  $keyowner:              ( x ) -> return true for _ of x ? {}; return false\n  frozen:                 ( x ) => Object.isFrozen      x\n  sealed:                 ( x ) => Object.isSealed      x\n  extensible:             ( x ) => Object.isExtensible  x\n  ### These qualified types should never be returned by `type_of()`: ###\n  empty_list:             ( x ) => ( @isa.list    x ) and ( x.length is   0 )\n  empty_text:             ( x ) => ( @isa.text    x ) and ( x.length is   0 )\n  empty_map:              ( x ) => ( @isa.map     x ) and ( x.size   is   0 )\n  empty_set:              ( x ) => ( @isa.set     x ) and ( x.size   is   0 )\n  nonempty_list:          ( x ) => ( @isa.list    x ) and ( x.length isnt 0 )\n  nonempty_text:          ( x ) => ( @isa.text    x ) and ( x.length isnt 0 )\n  nonempty_map:           ( x ) => ( @isa.map     x ) and ( x.size   isnt 0 )\n  nonempty_set:           ( x ) => ( @isa.set     x ) and ( x.size   isnt 0 )\n  empty_object:           ( x ) => ( @isa.object  x ) and ( not @isa.$keyowner x )\n  nonempty_object:        ( x ) => ( @isa.object  x ) and (     @isa.$keyowner x )\n  ### Generic types: ###\n  truthy:                 ( x ) -> not not x\n  falsy:                  ( x ) ->     not x\n\n  #=========================================================================================================\n  # Existential Types\n  #---------------------------------------------------------------------------------------------------------\n  nothing:        ( x ) -> not x?\n  something:      ( x ) -> x?\n  anything:       ( x ) -> true\n\n  #=========================================================================================================\n  # Declaration Types\n  #---------------------------------------------------------------------------------------------------------\n  $type_declaration: ( x ) ->\n    ( @isa.$known_type_name x ) or \\\n    ( @isa.$type_declaration_function x ) or \\\n    ( @isa.$type_declaration_object x )\n\n  #---------------------------------------------------------------------------------------------------------\n  $type_declaration_function: ( x ) -> ( @isa.function x ) and ( x.length is 1 )\n  $known_type_name: ( x ) -> ( @isa.jsidentifier x ) and ( @isa.$type_declaration_function @isa[ x ] )\n\n  #---------------------------------------------------------------------------------------------------------\n  $type_declaration_fields_object: ( x ) ->\n    return false unless ( @isa.object x )\n    for k, v of x\n      return false unless @isa.jsidentifier k\n      return false unless @isa.$type_declaration x\n    return true\n\n  #---------------------------------------------------------------------------------------------------------\n  ### NOTE to be rewitten in object style ###\n  $type_declaration_object: ( x ) ->\n    return false unless @isa.keyowner                             x\n    return false unless @isa.optional_$type_declaration_function  x.isa\n    return false unless @isa.optional_$type_declaration_function  x.create\n    return false unless @isa.optional_$type_declaration_object    x.fields\n    return false unless @isa.optional_$type_declaration_template  x.template\n    return false unless @isa.optional_function                    x.cast\n    return true\n\n\n#===========================================================================================================\ndefaults                  = Object.freeze\n  types_cfg:\n    declarations: Isa::\n\n\n#===========================================================================================================\nclass _Intertype\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    props      ?= require './props'\n    cfg         = { defaults.types_cfg..., cfg..., }\n    @_collect_and_generate_declarations cfg.declarations\n    props.hide @, 'optional', @optional.bind  @\n    props.hide @, 'type_of',  @type_of.bind   @\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _isa: ( key, type, x, isa ) ->\n    # debug '^_Intertype::_isa@1^', { key, type, x, isa, }\n    # debug '^_Intertype::_isa@2^', x instanceof Optional\n    # debug '^_Intertype::_isa@3^', x instanceof All_of\n    # debug '^_Intertype::_isa@4^', x instanceof Failure\n    # debug '^_Intertype::_isa@5^', key # { key, type, x, isa, }\n    if ( x instanceof Optional )\n      return true if ( not ( x = x.get() )? )\n    #.......................................................................................................\n    if ( x instanceof All_of )\n      return true unless ( x = x.get() )?\n      return true unless ( x[ Symbol.iterator ] )?\n      for element from x\n        return false unless isa.call @, element\n      return true\n    #.......................................................................................................\n    else if ( x instanceof Any_of )\n      return false unless ( x = x.get() )?\n      return false unless ( x[ Symbol.iterator ] )?\n      for element from x\n        return true if isa.call @, element\n      return false\n    #.......................................................................................................\n    else if ( x instanceof Failure )\n      return false\n    #.......................................................................................................\n    return isa.call @, x\n\n  #---------------------------------------------------------------------------------------------------------\n  _verify: ( key, type, x, isa ) ->\n    # debug '^_Intertype::_verify@1^', { key, type, x, isa, }\n    # debug '^_Intertype::_verify@2^', ( x instanceof Failure ), ( x instanceof Optional )\n    # debug '^_Intertype::_verify@1^', { key, type, x, isa, isa_optional: ( x instanceof Optional ), }\n    # return x.get()      if ( x instanceof Optional )\n    return x            if ( x instanceof Optional )\n    return get_value x  if ( isa.call @, x ) is true\n    return new Failure x\n\n  #---------------------------------------------------------------------------------------------------------\n  _validate: ( key, type, x ) ->\n    # debug '^_Intertype::_validate@1^', { key, type, x, }\n    if ( x instanceof Optional )\n      return x unless ( x = x.get() )?\n    unless ( x instanceof Failure )\n      return get_value x  if ( @isa[ type ] x ) is true\n    ### TAINT put message into a resource object? ###\n    # x = get_value x\n    throw new Error \"^_Intertype::_validate@1^ expected a #{key}, got a #{@type_of x}\"\n\n  #---------------------------------------------------------------------------------------------------------\n  _collect_and_generate_declarations: ( declarations ) ->\n    props        ?= require './props'\n    @isa          = {}\n    @validate     = {}\n    @verify       = {}\n    props.hide @, '_isa_methods', []\n    me            = @\n    #.......................................................................................................\n    cfg =\n      descriptor: { enumerable: true, }\n      overwrite:  false\n      # filter: ({ key, }) -> not key.startsWith '_'\n      #.....................................................................................................\n      generator:  ({ target, owner, key, descriptor, }) ->\n        type        = key\n        isa         = descriptor.value\n        value       = ( x ) -> me._isa key, type, x, isa\n        descriptor  = { descriptor..., value, }\n        yield { target: me.isa, key, descriptor, }\n        #...................................................................................................\n        # verify_$type\n        yield do ( key = type, type ) ->\n          value       = ( x ) => me._verify key, type, x, isa\n          descriptor  = { descriptor..., value, }\n          return { target: me.verify, key, descriptor, }\n        #...................................................................................................\n        # validate_$type\n        yield do ( key = type, type ) ->\n          value       = ( x ) => me._validate key, type, x\n          descriptor  = { descriptor..., value, }\n          return { target: me.validate, key, descriptor, }\n        #...................................................................................................\n        return null\n      #.....................................................................................................\n      decorator:  ({ target, owner, key: type, descriptor: { value, }, }) ->\n        switch target\n          when me.isa\n            value = props.nameit \"isa_#{type}\", value.bind me\n            unless \\\n                ( type.startsWith 'optional_'                     ) or \\\n                ( type.startsWith '$'                             ) or \\\n                ( type in [ 'nothing', 'something', 'anything', ] )\n              me._isa_methods.push [ type, value, ]\n          when me.validate\n            value = props.nameit \"validate_#{type}\", value.bind me\n        return { value, }\n    #.......................................................................................................\n    props.acquire_depth_first declarations, cfg\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  optional: ( x ) -> new Optional x\n  all_of:   ( x ) -> if x instanceof Failure then x else new All_of x\n  any_of:   ( x ) -> if x instanceof Failure then x else new Any_of x\n\n  #---------------------------------------------------------------------------------------------------------\n  type_of: ( x ) ->\n    for [ type, isa_method, ] in @_isa_methods\n      return type if isa_method x\n    return type.toLowerCase() unless ( type = @get_denicola_device_name x ) is '0'\n    ### TAINT return class name? ###\n    ### TAINT raise exception? ###\n    return 'something'\n\n  #---------------------------------------------------------------------------------------------------------\n  get_miller_device_name:   ( x ) -> R = Object::toString.call x; R[ 8 ... R.length - 1 ]\n  get_denicola_device_name: ( x ) -> x?.constructor.name ? '0'\n\n  #---------------------------------------------------------------------------------------------------------\n  get_carter_device_name: ( x, miller_device_name = null ) ->\n    miller_device_name ?= Object::toString.call x\n    return 'other'  unless miller_device_name in [ '[object Function]', 'Function', ]\n    return 'fn'     unless ( descriptor = Object.getOwnPropertyDescriptor x, 'prototype' )?\n    return 'fn'     if descriptor.writable\n    return 'class'\n\n  #---------------------------------------------------------------------------------------------------------\n  get_type_signature: ( x ) -> [\n    ( typeof                    x                   )\n    ( @get_miller_device_name   x                   )\n    ( @get_denicola_device_name x                   )\n    ( @get_carter_device_name   x                   )\n    ( if Number.isNaN           x then 'N' else '0' ) ].join '/'\n\n\n#===========================================================================================================\nclass Intertype extends _Intertype\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super cfg\n    @_transform_and_validate_declarations()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _collect_and_generate_declarations: ( declarations ) ->\n    props  ?= require './props'\n    props.hide @, '_types', new _Intertype() ### NOTE could use custom declarations ###\n    declarations  = if @_types.isa.class declarations then ( declarations:: ) else ( declarations )\n    return super declarations\n\n  #---------------------------------------------------------------------------------------------------------\n  _transform_and_validate_declarations: ->\n    # debug '^Intertype::_transform_and_validate_declarations@1^'\n    for k, v of @isa\n      # debug '^Intertype::_transform_and_validate_declarations@1^', k, v\n      unless ( @validate.jsidentifier k ) then null\n      unless ( @validate.$type_declaration k ) then null\n    return null\n\n\n#===========================================================================================================\n_types                    = new _Intertype()\nmodule.exports            = new Intertype()\nmodule.exports.Isa        = Isa\nmodule.exports.Intertype  = Intertype\nmodule.exports.Failure    = Failure\nmodule.exports.Optional   = Optional\nmodule.exports.Iterator   = Iterator\nmodule.exports.All_of     = All_of\nmodule.exports.Any_of     = Any_of\n\n\n"
  ]
}