{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/INTERIM_dt.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,QAAA;;;;EAKA,IAAC,CAAA,MAAD,GAAsC,OAAA,CAAQ,OAAR;;EACtC,IAAC,CAAA,yBAAD,GAAsC;;EACtC,IAAC,CAAA,0BAAD,GAAsC;;EACtC,QAAA,GAAsC,CAAA;;EAGnC,CAAA,CAAA,CAAA,GAAA,EAAA;AACH,QAAA,iBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA;IAAE,GAAA,GAAoB,OAAA,CAAQ,kBAAR;IAA0C,IAAC,CAAA,MAAM,CAAC,MAAR,CAAe,GAAf;IAC9D,YAAA,GAAoB,OAAA,CAAQ,2BAAR;IAA0C,IAAC,CAAA,MAAM,CAAC,MAAR,CAAe,YAAf;IAC9D,QAAA,GAAoB,OAAA,CAAQ,uBAAR;IAA0C,IAAC,CAAA,MAAM,CAAC,MAAR,CAAe,QAAf;IAC9D,iBAAA,GAAoB,OAAA,CAAQ,gCAAR;IAA0C,IAAC,CAAA,MAAM,CAAC,MAAR,CAAe,iBAAf;IAC9D,QAAA,GAAoB,OAAA,CAAQ,uBAAR;WAA0C,IAAC,CAAA,MAAM,CAAC,MAAR,CAAe,QAAf;EAL7D,CAAA,IAXH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8CA,IAAC,CAAA,QAAD,GAAY,QAAA,CAAE,IAAF,CAAA;AACV,WAAO,CAAE,IAAC,CAAA,KAAD,CAAO,IAAP,CAAF,CAAe,CAAC,OAAhB,CAAA;EADG,EA9CZ;;;EAkDA,IAAC,CAAA,GAAD,GAAO,QAAA,CAAE,GAAF,CAAA;AACP,QAAA,CAAA;;IACE,GAAA,GAAM,CAAE,GAAA,QAAQ,CAAC,cAAX,EAA8B,GAAA,GAA9B;IACN,CAAA,GAAI,IAAC,CAAA,MAAD,CAAA,CAAS,CAAC,GAAV,CAAA;IACJ,IAAmC,oBAAnC;MAAA,CAAA,GAAI,CAAC,CAAC,QAAF,CAAW,GAAA,GAAG,CAAC,QAAf,EAAJ;;IACA,IAAmC,eAAnC;MAAA,CAAA,GAAI,CAAC,CAAC,GAAF,CAAW,GAAA,GAAG,CAAC,GAAf,EAAJ;;AACA,WAAO,CAAC,CAAC,MAAF,CAAS,IAAC,CAAA,0BAAV;EANF,EAlDP;;;EA2DA,IAAC,CAAA,eAAD,GAAmB,QAAA,CAAE,KAAF,CAAA;WAAa,CAAE,IAAC,CAAA,MAAD,CAAQ,KAAR,CAAF,CAAiB,CAAC,GAAlB,CAAA,CAAuB,CAAC,MAAxB,CAA+B,IAAC,CAAA,0BAAhC;EAAb,EA3DnB;;;EA8DA,IAAC,CAAA,KAAD,GAAS,QAAA,CAAE,IAAF,CAAA;AACT,QAAA,CAAA;;IACE,CAAA,GAAI,CAAE,IAAC,CAAA,MAAD,CAAQ,IAAR,EAAc,IAAC,CAAA,yBAAf,CAAF,CAA4C,CAAC,GAA7C,CAAA;IACJ,KAA+D,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAZ,CAA+B,CAA/B,CAA/D;MAAA,MAAM,IAAI,KAAJ,CAAU,CAAA,0BAAA,CAAA,CAA6B,GAAA,CAAI,IAAJ,CAA7B,CAAA,CAAV,EAAN;;AACA,WAAO;EAJA,EA9DT;;;EAqEA,IAAC,CAAA,MAAD,GAAU,QAAA,CAAE,IAAF,EAAA,GAAQ,CAAR,CAAA;AACV,QAAA;IAAE,CAAA,GAAI,IAAC,CAAA,KAAD,CAAO,IAAP;AACJ,WAAO,CAAC,CAAC,MAAF,CAAS,GAAA,CAAT;EAFC,EArEV;;;EA0EA,IAAC,CAAA,eAAD,GAAmB,QAAA,CAAE,IAAF,CAAA;WAAY,CAAE,IAAC,CAAA,KAAD,CAAO,IAAP,CAAF,CAAe,CAAC,MAAhB,CAAA;EAAZ;AA1EnB",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\n### https://day.js.org ###\n@_dayjs                             = require 'dayjs'\n@_timestamp_input_template          = 'YYYYMMDD-HHmmssZ'\n@_timestamp_output_template         = 'YYYYMMDD-HHmmss[Z]'\ndefaults                            = {}\n\n#===========================================================================================================\ndo =>\n  utc               = require 'dayjs/plugin/utc';               @_dayjs.extend utc\n  relativeTime      = require 'dayjs/plugin/relativeTime';      @_dayjs.extend relativeTime\n  toObject          = require 'dayjs/plugin/toObject';          @_dayjs.extend toObject\n  customParseFormat = require 'dayjs/plugin/customParseFormat'; @_dayjs.extend customParseFormat\n  duration          = require 'dayjs/plugin/duration';          @_dayjs.extend duration\n\n#===========================================================================================================\n# H.types.declare 'guy_dt_valid_dayjs', tests:\n#   \"( @type_of x ) is 'm'\":  ( x ) -> ( @type_of x ) is 'm'\n#   \"@isa.float x.$y\":        ( x ) -> @isa.float x.$y\n#   \"@isa.float x.$M\":        ( x ) -> @isa.float x.$M\n#   \"@isa.float x.$D\":        ( x ) -> @isa.float x.$D\n#   \"@isa.float x.$W\":        ( x ) -> @isa.float x.$W\n#   \"@isa.float x.$H\":        ( x ) -> @isa.float x.$H\n#   \"@isa.float x.$m\":        ( x ) -> @isa.float x.$m\n#   \"@isa.float x.$s\":        ( x ) -> @isa.float x.$s\n#   \"@isa.float x.$ms\":       ( x ) -> @isa.float x.$ms\n\n# #-----------------------------------------------------------------------------------------------------------\n# H.types.declare 'guy_dt_timestamp', tests:\n#   \"@isa.text x\":                    ( x ) -> @isa.text x\n#   \"( /^\\\\d{8}-\\\\d{6}Z$/ ).test x\":  ( x ) -> ( /^\\d{8}-\\d{6}Z$/ ).test x\n\n# #-----------------------------------------------------------------------------------------------------------\n# H.types.declare 'guy_dt_now_cfg', tests:\n#   \"@isa.object x\":                    ( x ) -> @isa.object x\n# defaults.guy_dt_now_cfg =\n#     subtract:       null\n#     add:            null\n\n\n#===========================================================================================================\n# DATETIME\n#-----------------------------------------------------------------------------------------------------------\n@from_now = ( srts ) ->\n  return ( @parse srts ).fromNow()\n\n#-----------------------------------------------------------------------------------------------------------\n@now = ( cfg ) ->\n  # H.types.validate.guy_dt_now_cfg ( cfg = { defaults.guy_dt_now_cfg..., cfg..., } )\n  cfg = { defaults.guy_dt_now_cfg..., cfg..., }\n  R = @_dayjs().utc()\n  R = R.subtract cfg.subtract...  if cfg.subtract?\n  R = R.add      cfg.add...       if cfg.add?\n  return R.format @_timestamp_output_template\n\n#-----------------------------------------------------------------------------------------------------------\n@srts_from_isots = ( isots ) -> ( @_dayjs isots ).utc().format @_timestamp_output_template\n\n#-----------------------------------------------------------------------------------------------------------\n@parse = ( srts ) ->\n  # H.types.validate.guy_dt_timestamp srts\n  R = ( @_dayjs srts, @_timestamp_input_template ).utc()\n  throw new Error \"^guy.datetime.dt_parse@1^ #{rpr srts}\" unless H.types.isa.guy_dt_valid_dayjs R\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@format = ( srts, P... ) ->\n  R = @parse srts\n  return R.format P...\n\n#-----------------------------------------------------------------------------------------------------------\n@isots_from_srts = ( srts ) -> ( @parse srts ).format()\n\n\n\n"
  ]
}